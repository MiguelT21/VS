<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxEAAAsRAX9kX5EAAAKiSURBVFhH5da5r01RFMfxZ4ohhoSKQqgMEWOj0klUatEp
        kBiipRNqCQl6jdY/YOjNNBKNREMoFBJi9vucc1ccN9d7951HRPySb95ea6/fOvu8s88+d+Jf1ZwwO8wa
        YCz3/2h/uBKuDjCW+6Pyb6bT4dsvMEdVOyN5tsNaHt6Fz+FE2DvAWM6cmmGN6jWpugZ3M7cdThwI7vRG
        E/2s68GcGuLp/ifGXkSZdoeH4e6AB+FjcJFX4V54NMBYzpwateXTQy8a69HU3R4LGnb5Ej4N5bqYUzOc
        Px6oeo+tjWF72DbAeMfg79YhunPdej3+XdnRNtzJJvpxApaMh+M6EXl4R70VU6qa7gyeoU1Vsps3hQVN
        1MpYrrvTeXj1oO5Cp1QVbw6a2OXzJCLvvdypJmplLGeO1PLI6UHTWkDdybqgyZNQd3wkyF1uolaXgtzR
        JmpreeT0oLHPAariNeFreBYWSUQHg8bnm6iVsdyhJmpreXj1oF4LWBm82y/CEonIRVzsQhO1MpY73ERt
        LQ+vHtRrAXbw+/AmLJOIxlmAWh7eegumtYDS4vA2+MiskIhcZKoFqOXh1aO3FobX4UNYJRGNswC1PLx6
        9Nb88Dw439dKRKMeQW3CWoBaHl49esv7/DRovl4iqtfwYhO1Mpar13BDEPPW+dFLjtXHQTMfHNoXxGeb
        qNWZIGeO1Ip5Z/Rj1c69HTTzpSOHzJ5Qm5KM5ep5q+Xh7bX7u7oVNNvVRJM3rDm1PLy9Vf+6c0Gza2Fp
        cBHP1dluDGM5Y4eQWh5e6vUY6m5Wh5dBQz+77oT7A3xwULG5+mnGw0vVa9qqL5hP7c3gbNd8MtSo5aFp
        fQVHqdvA+22H+8RuGULOXJ0XNOOLl/o0+m0X76o23GT0ft5/QRMT3wH+qrfpqhWs3wAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LCsAAAAASUVORK5CYII=
</value>
  </data>
</root>